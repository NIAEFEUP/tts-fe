{"version":3,"sources":["../../../../../../packages/vite/src/migrations/update-17-2-0/update-vite-config.ts"],"sourcesContent":["import {\n  Tree,\n  formatFiles,\n  getProjects,\n  joinPathFragments,\n  logger,\n} from '@nx/devkit';\nimport { forEachExecutorOptions } from '@nx/devkit/src/generators/executor-options-utils';\nimport { ViteBuildExecutorOptions } from '../../executors/build/schema';\nimport { updateBuildOutDirAndRoot } from './lib/edit-build-config';\nimport { updateTestConfig } from './lib/edit-test-config';\nimport { addFileReplacements } from './lib/add-file-replacements';\nimport { tsquery } from '@phenomnomnominal/tsquery';\nimport ts = require('typescript');\nimport { findViteConfig } from '../../utils/find-vite-config';\n\nexport default async function updateBuildDir(tree: Tree) {\n  const projects = getProjects(tree);\n  forEachExecutorOptions<ViteBuildExecutorOptions>(\n    tree,\n    '@nx/vite:build',\n    (options, projectName, targetName) => {\n      const projectConfig = projects.get(projectName);\n      const config =\n        options.configFile || findViteConfig(tree, projectConfig.root);\n      if (!config || !tree.exists(config)) {\n        return;\n      }\n      let configContents = tree.read(config, 'utf-8');\n\n      configContents = updateBuildOutDirAndRoot(\n        options,\n        configContents,\n        projectConfig,\n        targetName,\n        tree,\n        projectName,\n        config\n      );\n\n      configContents = updateTestConfig(configContents, projectConfig, config);\n\n      if (options['fileReplacements']?.length > 0) {\n        configContents = addFileReplacements(\n          configContents,\n          options['fileReplacements'],\n          config\n        );\n      }\n\n      tree.write(config, configContents);\n    }\n  );\n\n  await formatFiles(tree);\n}\n\nexport function getConfigNode(configFileContents: string): ts.Node | undefined {\n  if (!configFileContents) {\n    return;\n  }\n  let configNode = tsquery.query(\n    configFileContents,\n    `CallExpression:has(Identifier[name=defineConfig]) > ObjectLiteralExpression`\n  )?.[0];\n\n  if (!configNode) {\n    const arrowFunctionReturnStatement = tsquery.query(\n      configFileContents,\n      `ArrowFunction Block ReturnStatement ObjectLiteralExpression`\n    )?.[0];\n\n    if (arrowFunctionReturnStatement) {\n      configNode = arrowFunctionReturnStatement;\n    }\n  }\n\n  return configNode;\n}\n\nexport function notFoundWarning(configPath: string) {\n  logger.warn(`\n  Could not migrate your ${configPath} file.\n  Please add the build.outDir and root options in your ${configPath} file.\n  You can find more information on how to configure vite for Nx here:\n  \n  https://nx.dev/recipes/vite/configure-vite\n  `);\n}\n"],"names":["updateBuildDir","getConfigNode","notFoundWarning","tree","projects","getProjects","forEachExecutorOptions","options","projectName","targetName","projectConfig","get","config","configFile","findViteConfig","root","exists","configContents","read","updateBuildOutDirAndRoot","updateTestConfig","length","addFileReplacements","write","formatFiles","configFileContents","tsquery","configNode","query","arrowFunctionReturnStatement","configPath","logger","warn"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;;;;;IAgBA,OAuCC;eAvC6BA;;IAyCdC,aAAa;eAAbA;;IAuBAC,eAAe;eAAfA;;;wBA1ET;sCACgC;iCAEE;gCACR;qCACG;yBACZ;gCAEO;AAEhB,eAAeF,eAAeG,IAAU;IACrD,MAAMC,WAAWC,IAAAA,mBAAW,EAACF;IAC7BG,IAAAA,4CAAsB,EACpBH,MACA,kBACA,CAACI,SAASC,aAAaC;YAqBjBF;QApBJ,MAAMG,gBAAgBN,SAASO,GAAG,CAACH;QACnC,MAAMI,SACJL,QAAQM,UAAU,IAAIC,IAAAA,8BAAc,EAACX,MAAMO,cAAcK,IAAI;QAC/D,IAAI,CAACH,UAAU,CAACT,KAAKa,MAAM,CAACJ,SAAS;YACnC;QACF;QACA,IAAIK,iBAAiBd,KAAKe,IAAI,CAACN,QAAQ;QAEvCK,iBAAiBE,IAAAA,yCAAwB,EACvCZ,SACAU,gBACAP,eACAD,YACAN,MACAK,aACAI;QAGFK,iBAAiBG,IAAAA,gCAAgB,EAACH,gBAAgBP,eAAeE;QAEjE,IAAIL,EAAAA,4BAAAA,OAAO,CAAC,mBAAmB,qBAA3BA,0BAA6Bc,MAAM,IAAG,GAAG;YAC3CJ,iBAAiBK,IAAAA,wCAAmB,EAClCL,gBACAV,OAAO,CAAC,mBAAmB,EAC3BK;QAEJ;QAEAT,KAAKoB,KAAK,CAACX,QAAQK;IACrB;IAGF,MAAMO,IAAAA,mBAAW,EAACrB;AACpB;AAEO,SAASF,cAAcwB,kBAA0B;QAIrCC;IAHjB,IAAI,CAACD,oBAAoB;QACvB;IACF;IACA,IAAIE,cAAaD,iBAAAA,gBAAO,CAACE,KAAK,CAC5BH,oBACA,CAAC,2EAA2E,CAAC,sBAF9DC,cAGd,CAAC,EAAE;IAEN,IAAI,CAACC,YAAY;YACsBD;QAArC,MAAMG,gCAA+BH,kBAAAA,gBAAO,CAACE,KAAK,CAChDH,oBACA,CAAC,2DAA2D,CAAC,sBAF1BC,eAGlC,CAAC,EAAE;QAEN,IAAIG,8BAA8B;YAChCF,aAAaE;QACf;IACF;IAEA,OAAOF;AACT;AAEO,SAASzB,gBAAgB4B,UAAkB;IAChDC,cAAM,CAACC,IAAI,CAAC,CAAC;yBACU,EAAEF,WAAW;uDACiB,EAAEA,WAAW;;;;EAIlE,CAAC;AACH"}