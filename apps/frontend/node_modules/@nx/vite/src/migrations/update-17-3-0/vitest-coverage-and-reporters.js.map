{"version":3,"sources":["../../../../../../packages/vite/src/migrations/update-17-3-0/vitest-coverage-and-reporters.ts"],"sourcesContent":["import {\n  ProjectConfiguration,\n  Tree,\n  formatFiles,\n  getProjects,\n  joinPathFragments,\n} from '@nx/devkit';\nimport { forEachExecutorOptions } from '@nx/devkit/src/generators/executor-options-utils';\nimport { fixCoverageAndRerporters } from './lib/fix-coverage-and-reporters';\n\nexport default async function fixCoverageThreshold(tree: Tree) {\n  const projects = getProjects(tree);\n  forEachExecutorOptions(tree, '@nx/vite:test', (_options, projectName) => {\n    const projectConfig: ProjectConfiguration = projects.get(\n      projectName\n    ) as ProjectConfiguration;\n    const configPath = findViteConfig(tree, projectConfig.root);\n    if (!configPath || !tree.exists(configPath)) {\n      return;\n    }\n    const configContents = tree.read(configPath, 'utf-8') as string;\n    const updatedConfigContents = fixCoverageAndRerporters(configContents);\n    if (updatedConfigContents) {\n      tree.write(configPath, updatedConfigContents);\n    }\n  });\n\n  await formatFiles(tree);\n}\n\nfunction findViteConfig(tree: Tree, searchRoot: string) {\n  const allowsExt = ['js', 'mjs', 'ts', 'cjs', 'mts', 'cts'];\n\n  for (const ext of allowsExt) {\n    if (tree.exists(joinPathFragments(searchRoot, `vite.config.${ext}`))) {\n      return joinPathFragments(searchRoot, `vite.config.${ext}`);\n    } else if (\n      tree.exists(joinPathFragments(searchRoot, `vitest.config.${ext}`))\n    ) {\n      return joinPathFragments(searchRoot, `vitest.config.${ext}`);\n    }\n  }\n}\n"],"names":["fixCoverageThreshold","tree","projects","getProjects","forEachExecutorOptions","_options","projectName","projectConfig","get","configPath","findViteConfig","root","exists","configContents","read","updatedConfigContents","fixCoverageAndRerporters","write","formatFiles","searchRoot","allowsExt","ext","joinPathFragments"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";+BAUA;;;eAA8BA;;;wBAJvB;sCACgC;yCACE;AAE1B,eAAeA,qBAAqBC,IAAU;IAC3D,MAAMC,WAAWC,IAAAA,mBAAW,EAACF;IAC7BG,IAAAA,4CAAsB,EAACH,MAAM,iBAAiB,CAACI,UAAUC;QACvD,MAAMC,gBAAsCL,SAASM,GAAG,CACtDF;QAEF,MAAMG,aAAaC,eAAeT,MAAMM,cAAcI,IAAI;QAC1D,IAAI,CAACF,cAAc,CAACR,KAAKW,MAAM,CAACH,aAAa;YAC3C;QACF;QACA,MAAMI,iBAAiBZ,KAAKa,IAAI,CAACL,YAAY;QAC7C,MAAMM,wBAAwBC,IAAAA,iDAAwB,EAACH;QACvD,IAAIE,uBAAuB;YACzBd,KAAKgB,KAAK,CAACR,YAAYM;QACzB;IACF;IAEA,MAAMG,IAAAA,mBAAW,EAACjB;AACpB;AAEA,SAASS,eAAeT,IAAU,EAAEkB,UAAkB;IACpD,MAAMC,YAAY;QAAC;QAAM;QAAO;QAAM;QAAO;QAAO;KAAM;IAE1D,KAAK,MAAMC,OAAOD,UAAW;QAC3B,IAAInB,KAAKW,MAAM,CAACU,IAAAA,yBAAiB,EAACH,YAAY,CAAC,YAAY,EAAEE,IAAI,CAAC,IAAI;YACpE,OAAOC,IAAAA,yBAAiB,EAACH,YAAY,CAAC,YAAY,EAAEE,IAAI,CAAC;QAC3D,OAAO,IACLpB,KAAKW,MAAM,CAACU,IAAAA,yBAAiB,EAACH,YAAY,CAAC,cAAc,EAAEE,IAAI,CAAC,IAChE;YACA,OAAOC,IAAAA,yBAAiB,EAACH,YAAY,CAAC,cAAc,EAAEE,IAAI,CAAC;QAC7D;IACF;AACF"}