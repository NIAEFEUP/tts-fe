{"version":3,"sources":["../../../../../../packages/vite/src/utils/test-files/test-vite-configs.ts"],"sourcesContent":["export const noBuildOptions = `\n    /// <reference types=\"vitest\" />\n    import { defineConfig } from 'vite';\n    import react from '@vitejs/plugin-react';\n    import { nxViteTsPaths } from '@nx/vite/plugins/nx-tsconfig-paths.plugin';\n\n    export default defineConfig({\n      cacheDir: '../../node_modules/.vitest',\n      plugins: [\n        react(),\n        nxViteTsPaths(),\n      ],\n\n      test: {\n        globals: true,\n        environment: 'jsdom',\n        include: ['src/**/*.{test,spec}.{js,mjs,cjs,ts,mts,cts,jsx,tsx}'],\n      },\n\n    });\n    `;\n\nexport const someBuildOptions = `\n    /// <reference types=\"vitest\" />\n    import { defineConfig } from 'vite';\n    import react from '@vitejs/plugin-react';\n    import { nxViteTsPaths } from '@nx/vite/plugins/nx-tsconfig-paths.plugin';\n\n    export default defineConfig({\n      cacheDir: '../../node_modules/.vitest',\n      plugins: [\n        react(),\n        nxViteTsPaths(),\n      ],\n\n      test: {\n        globals: true,\n        environment: 'jsdom',\n        include: ['src/**/*.{test,spec}.{js,mjs,cjs,ts,mts,cts,jsx,tsx}'],\n      },\n\n      build: {\n        my: 'option',\n      }\n\n    });\n    `;\n\nexport const noContentDefineConfig = `\n    /// <reference types=\"vitest\" />\n    import { defineConfig } from 'vite';\n    import react from '@vitejs/plugin-react';\n    import { nxViteTsPaths } from '@nx/vite/plugins/nx-tsconfig-paths.plugin';\n\n    export default defineConfig({});\n    `;\n\nexport const conditionalConfig = `\n    /// <reference types=\"vitest\" />\n    import { defineConfig } from 'vite';\n    export default defineConfig(({ command, mode, ssrBuild }) => {\n      if (command === 'serve') {\n        return {\n          port: 4200,\n          host: 'localhost',\n        }\n      } else {\n        // command === 'build'\n        return {\n          my: 'option',\n        }\n      }\n    })\n    `;\n\nexport const configNoDefineConfig = `\n    /// <reference types=\"vitest\" />\n    import { defineConfig } from 'vite';\n    import react from '@vitejs/plugin-react';\n    import { nxViteTsPaths } from '@nx/vite/plugins/nx-tsconfig-paths.plugin';\n\n    export default {\n      plugins: [\n        react(),\n        nxViteTsPaths(),\n      ],\n    };\n    `;\n\nexport const noBuildOptionsHasTestOption = `\n    /// <reference types=\"vitest\" />\n    import { defineConfig } from 'vite';\n    import react from '@vitejs/plugin-react';\n    import { nxViteTsPaths } from '@nx/vite/plugins/nx-tsconfig-paths.plugin';\n\n    export default defineConfig({\n    \n      cacheDir: '../../node_modules/.vitest',\n      plugins: [\n        react(),\n        nxViteTsPaths(),\n      ],\n\n      test: {\n        globals: true,\n        environment: 'jsdom',\n        include: ['src/**/*.{test,spec}.{js,mjs,cjs,ts,mts,cts,jsx,tsx}'],\n      },\n\n    });\n    `;\n\nexport const someBuildOptionsSomeTestOption = `\n    /// <reference types=\"vitest\" />\n    import { defineConfig } from 'vite';\n    import react from '@vitejs/plugin-react';\n    import { nxViteTsPaths } from '@nx/vite/plugins/nx-tsconfig-paths.plugin';\n\n    export default defineConfig({\n      plugins: [\n        react(),\n        nxViteTsPaths(),\n      ],\n\n      test: {\n        my: 'option',\n      },\n\n      build: {\n        my: 'option',\n      }\n\n    });\n    `;\n\nexport const hasEverything = `\n    /// <reference types=\"vitest\" />\n    import { defineConfig } from 'vite';\n    import react from '@vitejs/plugin-react';\n    import { nxViteTsPaths } from '@nx/vite/plugins/nx-tsconfig-paths.plugin';\n    import dts from 'vite-plugin-dts';\n    import { joinPathFragments } from '@nx/devkit';\n\n    export default defineConfig({\n      cacheDir: '../../node_modules/.vitest',\n      plugins: [\n        dts({ entryRoot: 'src', tsConfigFilePath: joinPathFragments(__dirname, 'tsconfig.lib.json'), skipDiagnostics: true }),\n        react(),\n        nxViteTsPaths(),\n      ],\n    \n      // Configuration for building your library.\n      // See: https://vitejs.dev/guide/build.html#library-mode\n      build: {\n        lib: {\n          // Could also be a dictionary or array of multiple entry points.\n          entry: 'src/index.ts',\n          name: 'pure-libs-react-vite',\n          fileName: 'index',\n          // Change this to the formats you want to support.\n          // Don't forget to update your package.json as well.\n          formats: ['es'],\n        },\n        rollupOptions: {\n          // External packages that should not be bundled into your library.\n          external: ['react', 'react-dom', 'react/jsx-runtime'],\n        },\n      },\n    \n      test: {\n        globals: true,\n        environment: 'jsdom',\n        include: ['src/**/*.{test,spec}.{js,mjs,cjs,ts,mts,cts,jsx,tsx}'],\n      },\n    });\n    `;\n\nexport const buildOption = `\n    // Configuration for building your library.\n    // See: https://vitejs.dev/guide/build.html#library-mode\n    build: {\n      lib: {\n        // Could also be a dictionary or array of multiple entry points.\n        entry: 'src/index.ts',\n        name: 'my-app',\n        fileName: 'index',\n        // Change this to the formats you want to support.\n        // Don't forget to update your package.json as well.\n        formats: ['es']\n      },\n      rollupOptions: {\n        // External packages that should not be bundled into your library.\n        external: ['react', 'react-dom', 'react/jsx-runtime']\n      }\n    },`;\nexport const buildOptionObject = {\n  lib: {\n    entry: 'src/index.ts',\n    name: 'my-app',\n    fileName: 'index',\n    formats: ['es'],\n  },\n  rollupOptions: {\n    external: ['react', 'react-dom', 'react/jsx-runtime'],\n  },\n};\n\nexport const testOption = `test: {\n        globals: true,\n        environment: 'jsdom',\n        include: ['src/**/*.{test,spec}.{js,mjs,cjs,ts,mts,cts,jsx,tsx}'],\n    },`;\n\nexport const testOptionObject = {\n  globals: true,\n  environment: 'jsdom',\n  include: ['src/**/*.{test,spec}.{js,mjs,cjs,ts,mts,cts,jsx,tsx}'],\n};\n\nexport const imports = [\n  `import dts from 'vite-plugin-dts'`,\n  `import { joinPathFragments } from '@nx/devkit'`,\n];\n\nexport const plugins = [`react()`, `nxViteTsPaths()`];\n"],"names":["buildOption","buildOptionObject","conditionalConfig","configNoDefineConfig","hasEverything","imports","noBuildOptions","noBuildOptionsHasTestOption","noContentDefineConfig","plugins","someBuildOptions","someBuildOptionsSomeTestOption","testOption","testOptionObject","lib","entry","name","fileName","formats","rollupOptions","external","globals","environment","include"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;;;;;IAiLaA,WAAW;eAAXA;;IAkBAC,iBAAiB;eAAjBA;;IA1IAC,iBAAiB;eAAjBA;;IAkBAC,oBAAoB;eAApBA;;IA4DAC,aAAa;eAAbA;;IAoFAC,OAAO;eAAPA;;IA3NAC,cAAc;eAAdA;;IAyFAC,2BAA2B;eAA3BA;;IAzCAC,qBAAqB;eAArBA;;IAgLAC,OAAO;eAAPA;;IA1MAC,gBAAgB;eAAhBA;;IA0FAC,8BAA8B;eAA9BA;;IA+FAC,UAAU;eAAVA;;IAMAC,gBAAgB;eAAhBA;;;AArNN,MAAMP,iBAAiB,CAAC;;;;;;;;;;;;;;;;;;;;IAoB3B,CAAC;AAEE,MAAMI,mBAAmB,CAAC;;;;;;;;;;;;;;;;;;;;;;;;IAwB7B,CAAC;AAEE,MAAMF,wBAAwB,CAAC;;;;;;;IAOlC,CAAC;AAEE,MAAMN,oBAAoB,CAAC;;;;;;;;;;;;;;;;IAgB9B,CAAC;AAEE,MAAMC,uBAAuB,CAAC;;;;;;;;;;;;IAYjC,CAAC;AAEE,MAAMI,8BAA8B,CAAC;;;;;;;;;;;;;;;;;;;;;IAqBxC,CAAC;AAEE,MAAMI,iCAAiC,CAAC;;;;;;;;;;;;;;;;;;;;;IAqB3C,CAAC;AAEE,MAAMP,gBAAgB,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAwC1B,CAAC;AAEE,MAAMJ,cAAc,CAAC;;;;;;;;;;;;;;;;;MAiBtB,CAAC;AACA,MAAMC,oBAAoB;IAC/Ba,KAAK;QACHC,OAAO;QACPC,MAAM;QACNC,UAAU;QACVC,SAAS;YAAC;SAAK;IACjB;IACAC,eAAe;QACbC,UAAU;YAAC;YAAS;YAAa;SAAoB;IACvD;AACF;AAEO,MAAMR,aAAa,CAAC;;;;MAIrB,CAAC;AAEA,MAAMC,mBAAmB;IAC9BQ,SAAS;IACTC,aAAa;IACbC,SAAS;QAAC;KAAuD;AACnE;AAEO,MAAMlB,UAAU;IACrB,CAAC,iCAAiC,CAAC;IACnC,CAAC,8CAA8C,CAAC;CACjD;AAEM,MAAMI,UAAU;IAAC,CAAC,OAAO,CAAC;IAAE,CAAC,eAAe,CAAC;CAAC"}