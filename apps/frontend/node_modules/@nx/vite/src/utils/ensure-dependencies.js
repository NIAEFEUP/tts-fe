"use strict";
Object.defineProperty(exports, "ensureDependencies", {
    enumerable: true,
    get: function() {
        return ensureDependencies;
    }
});
const _devkit = require("@nx/devkit");
const _versions = require("./versions");
function ensureDependencies(host, schema) {
    const devDependencies = {};
    if (schema.testEnvironment === 'jsdom') {
        devDependencies['jsdom'] = _versions.jsdomVersion;
    } else if (schema.testEnvironment === 'happy-dom') {
        devDependencies['happy-dom'] = _versions.happyDomVersion;
    } else if (schema.testEnvironment === 'edge-runtime') {
        devDependencies['@edge-runtime/vm'] = _versions.edgeRuntimeVmVersion;
    } else if (schema.testEnvironment !== 'node' && schema.testEnvironment) {
        _devkit.logger.info(`A custom environment was provided: ${schema.testEnvironment}. You need to install it manually.`);
    }
    if (schema.uiFramework === 'angular') {
        devDependencies['@analogjs/vitest-angular'] = _versions.analogVitestAngular;
        devDependencies['@analogjs/vite-plugin-angular'] = _versions.analogVitestAngular;
    }
    if (schema.uiFramework === 'react') {
        if (schema.compiler === 'swc') {
            devDependencies['@vitejs/plugin-react-swc'] = _versions.vitePluginReactSwcVersion;
        } else {
            devDependencies['@vitejs/plugin-react'] = _versions.vitePluginReactVersion;
        }
    }
    if (schema.includeLib) {
        devDependencies['vite-plugin-dts'] = _versions.vitePluginDtsVersion;
    }
    return (0, _devkit.addDependenciesToPackageJson)(host, {}, devDependencies);
}

//# sourceMappingURL=ensure-dependencies.js.map