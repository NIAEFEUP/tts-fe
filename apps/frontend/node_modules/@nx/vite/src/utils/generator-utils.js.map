{"version":3,"sources":["../../../../../packages/vite/src/utils/generator-utils.ts"],"sourcesContent":["import {\n  joinPathFragments,\n  logger,\n  offsetFromRoot,\n  readJson,\n  readNxJson,\n  readProjectConfiguration,\n  TargetConfiguration,\n  Tree,\n  updateProjectConfiguration,\n  writeJson,\n} from '@nx/devkit';\nimport { addBuildTargetDefaults } from '@nx/devkit/src/generators/target-defaults-utils';\nimport { isUsingTsSolutionSetup } from '@nx/js/src/utils/typescript/ts-solution-setup';\nimport { ViteBuildExecutorOptions } from '../executors/build/schema';\nimport { VitePreviewServerExecutorOptions } from '../executors/preview-server/schema';\nimport { VitestExecutorOptions } from '../executors/test/schema';\nimport { ViteConfigurationGeneratorSchema } from '../generators/configuration/schema';\nimport { ensureViteConfigIsCorrect } from './vite-config-edit-utils';\nimport { VitestGeneratorSchema } from '../generators/vitest/schema';\n\nexport type Target = 'build' | 'serve' | 'test' | 'preview';\nexport type TargetFlags = Partial<Record<Target, boolean>>;\nexport type UserProvidedTargetName = Partial<Record<Target, string>>;\nexport type ValidFoundTargetName = Partial<Record<Target, string>>;\n\nexport function findExistingJsBuildTargetInProject(targets: {\n  [targetName: string]: TargetConfiguration;\n}): {\n  supported?: string;\n  unsupported?: string;\n} {\n  const output: {\n    supported?: string;\n    unsupported?: string;\n  } = {};\n\n  const supportedExecutors = {\n    build: ['@nx/js:babel', '@nx/js:swc', '@nx/rollup:rollup'],\n  };\n  const unsupportedExecutors = [\n    '@nx/angular:ng-packagr-lite',\n    '@nx/angular:package',\n    '@nx/angular:webpack-browser',\n    '@nx/esbuild:esbuild',\n    '@nx/react-native:run-ios',\n    '@nx/react-native:start',\n    '@nx/react-native:run-android',\n    '@nx/react-native:bundle',\n    '@nx/react-native:build-android',\n    '@nx/react-native:bundle',\n    '@nx/next:build',\n    '@nx/js:tsc',\n    '@nrwl/angular:ng-packagr-lite',\n    '@nrwl/angular:package',\n    '@nrwl/angular:webpack-browser',\n    '@nrwl/esbuild:esbuild',\n    '@nrwl/react-native:run-ios',\n    '@nrwl/react-native:start',\n    '@nrwl/react-native:run-android',\n    '@nrwl/react-native:bundle',\n    '@nrwl/react-native:build-android',\n    '@nrwl/react-native:bundle',\n    '@nrwl/next:build',\n    '@nrwl/js:tsc',\n    '@angular-devkit/build-angular:browser',\n    '@angular-devkit/build-angular:browser-esbuild',\n    '@angular-devkit/build-angular:application',\n  ];\n\n  // We try to find the target that is using the supported executors\n  // for build since this is the one we will be converting\n  for (const target in targets) {\n    const executorName = targets[target].executor;\n    if (supportedExecutors.build.includes(executorName)) {\n      output.supported = target;\n    } else if (unsupportedExecutors.includes(executorName)) {\n      output.unsupported = target;\n    }\n  }\n  return output;\n}\n\nexport function addOrChangeTestTarget(\n  tree: Tree,\n  options: VitestGeneratorSchema,\n  hasPlugin: boolean\n) {\n  const nxJson = readNxJson(tree);\n\n  hasPlugin = nxJson.plugins?.some((p) =>\n    typeof p === 'string'\n      ? p === '@nx/vite/plugin'\n      : p.plugin === '@nx/vite/plugin' || hasPlugin\n  );\n\n  if (hasPlugin) {\n    return;\n  }\n\n  const project = readProjectConfiguration(tree, options.project);\n  const target = options.testTarget ?? 'test';\n\n  const reportsDirectory = joinPathFragments(\n    offsetFromRoot(project.root),\n    'coverage',\n    project.root === '.' ? options.project : project.root\n  );\n  const testOptions: VitestExecutorOptions = {\n    reportsDirectory,\n  };\n\n  project.targets ??= {};\n\n  if (project.targets[target]) {\n    throw new Error(`Target \"${target}\" already exists in the project.`);\n  } else {\n    project.targets[target] = {\n      executor: '@nx/vite:test',\n      outputs: ['{options.reportsDirectory}'],\n      options: testOptions,\n    };\n  }\n\n  updateProjectConfiguration(tree, options.project, project);\n}\n\nexport function addBuildTarget(\n  tree: Tree,\n  options: ViteConfigurationGeneratorSchema,\n  target: string\n) {\n  addBuildTargetDefaults(tree, '@nx/vite:build');\n  const project = readProjectConfiguration(tree, options.project);\n\n  const isTsSolutionSetup = isUsingTsSolutionSetup(tree);\n  const buildOptions: ViteBuildExecutorOptions = {\n    outputPath: isTsSolutionSetup\n      ? joinPathFragments(project.root, 'dist')\n      : joinPathFragments(\n          'dist',\n          project.root != '.' ? project.root : options.project\n        ),\n  };\n  project.targets ??= {};\n  project.targets[target] = {\n    executor: '@nx/vite:build',\n    outputs: ['{options.outputPath}'],\n    defaultConfiguration: 'production',\n    options: buildOptions,\n    configurations: {\n      development: {\n        mode: 'development',\n      },\n      production: {\n        mode: 'production',\n      },\n    },\n  };\n\n  updateProjectConfiguration(tree, options.project, project);\n}\n\nexport function addServeTarget(\n  tree: Tree,\n  options: ViteConfigurationGeneratorSchema,\n  target: string\n) {\n  const project = readProjectConfiguration(tree, options.project);\n\n  project.targets ??= {};\n\n  project.targets[target] = {\n    executor: '@nx/vite:dev-server',\n    defaultConfiguration: 'development',\n    options: {\n      buildTarget: `${options.project}:build`,\n    },\n    configurations: {\n      development: {\n        buildTarget: `${options.project}:build:development`,\n        hmr: true,\n      },\n      production: {\n        buildTarget: `${options.project}:build:production`,\n        hmr: false,\n      },\n    },\n  };\n\n  updateProjectConfiguration(tree, options.project, project);\n}\n\n/**\n * Adds a target for the preview server.\n *\n * @param tree\n * @param options\n * @param serveTarget An existing serve target.\n */\nexport function addPreviewTarget(\n  tree: Tree,\n  options: ViteConfigurationGeneratorSchema,\n  serveTarget: string\n) {\n  const project = readProjectConfiguration(tree, options.project);\n\n  const previewOptions: VitePreviewServerExecutorOptions = {\n    buildTarget: `${options.project}:build`,\n  };\n\n  project.targets ??= {};\n\n  // Update the options from the passed serve target.\n  if (project.targets[serveTarget]) {\n    const target = project.targets[serveTarget];\n    if (target.executor === '@nxext/vite:dev') {\n      previewOptions.proxyConfig = target.options.proxyConfig;\n    }\n    previewOptions['https'] = target.options?.https;\n    previewOptions['open'] = target.options?.open;\n  }\n\n  // Adds a preview target.\n  project.targets.preview = {\n    dependsOn: ['build'],\n    executor: '@nx/vite:preview-server',\n    defaultConfiguration: 'development',\n    options: previewOptions,\n    configurations: {\n      development: {\n        buildTarget: `${options.project}:build:development`,\n      },\n      production: {\n        buildTarget: `${options.project}:build:production`,\n      },\n    },\n  };\n\n  updateProjectConfiguration(tree, options.project, project);\n}\n\nexport function editTsConfig(\n  tree: Tree,\n  options: ViteConfigurationGeneratorSchema\n) {\n  const projectConfig = readProjectConfiguration(tree, options.project);\n\n  let tsconfigPath = joinPathFragments(projectConfig.root, 'tsconfig.json');\n  const isTsSolutionSetup = isUsingTsSolutionSetup(tree);\n  if (isTsSolutionSetup) {\n    tsconfigPath = [\n      joinPathFragments(projectConfig.root, 'tsconfig.app.json'),\n      joinPathFragments(projectConfig.root, 'tsconfig.lib.json'),\n    ].find((p) => tree.exists(p));\n  }\n  const config = readJson(tree, tsconfigPath);\n\n  switch (options.uiFramework) {\n    case 'react':\n      config.compilerOptions = {\n        jsx: 'react-jsx',\n        allowJs: false,\n        esModuleInterop: false,\n        allowSyntheticDefaultImports: true,\n        strict: true,\n      };\n      break;\n    case 'none':\n      if (!isTsSolutionSetup) {\n        config.compilerOptions = {\n          module: 'commonjs',\n          forceConsistentCasingInFileNames: true,\n          strict: true,\n          noImplicitOverride: true,\n          noPropertyAccessFromIndexSignature: true,\n          noImplicitReturns: true,\n          noFallthroughCasesInSwitch: true,\n        };\n      }\n      break;\n    default:\n      break;\n  }\n\n  writeJson(tree, tsconfigPath, config);\n}\n\nexport function deleteWebpackConfig(\n  tree: Tree,\n  projectRoot: string,\n  webpackConfigFilePath?: string\n) {\n  const webpackConfigPath =\n    webpackConfigFilePath && tree.exists(webpackConfigFilePath)\n      ? webpackConfigFilePath\n      : tree.exists(`${projectRoot}/webpack.config.js`)\n      ? `${projectRoot}/webpack.config.js`\n      : tree.exists(`${projectRoot}/webpack.config.ts`)\n      ? `${projectRoot}/webpack.config.ts`\n      : null;\n  if (webpackConfigPath) {\n    tree.delete(webpackConfigPath);\n  }\n}\n\nexport function moveAndEditIndexHtml(\n  tree: Tree,\n  options: ViteConfigurationGeneratorSchema\n) {\n  const projectConfig = readProjectConfiguration(tree, options.project);\n\n  let indexHtmlPath = `${projectConfig.root}/src/index.html`;\n  let mainPath = `${projectConfig.root}/src/main.ts${\n    options.uiFramework === 'react' ? 'x' : ''\n  }`;\n\n  if (projectConfig.root !== '.') {\n    mainPath = mainPath.replace(projectConfig.root, '');\n  }\n\n  if (\n    !tree.exists(indexHtmlPath) &&\n    tree.exists(`${projectConfig.root}/index.html`)\n  ) {\n    indexHtmlPath = `${projectConfig.root}/index.html`;\n  }\n\n  if (tree.exists(indexHtmlPath)) {\n    const indexHtmlContent = tree.read(indexHtmlPath, 'utf8');\n    if (\n      !indexHtmlContent.includes(\n        `<script type='module' src='${mainPath}'></script>`\n      )\n    ) {\n      tree.write(\n        `${projectConfig.root}/index.html`,\n        indexHtmlContent.replace(\n          '</body>',\n          `<script type='module' src='${mainPath}'></script>\n          </body>`\n        )\n      );\n\n      if (tree.exists(`${projectConfig.root}/src/index.html`)) {\n        tree.delete(`${projectConfig.root}/src/index.html`);\n      }\n    }\n  } else {\n    tree.write(\n      `${projectConfig.root}/index.html`,\n      `<!DOCTYPE html>\n      <html lang='en'>\n        <head>\n          <meta charset='UTF-8' />\n          <link rel='icon' href='/favicon.ico' />\n          <meta name='viewport' content='width=device-width, initial-scale=1.0' />\n          <title>Vite</title>\n        </head>\n        <body>\n          <div id='root'></div>\n          <script type='module' src='${mainPath}'></script>\n        </body>\n      </html>`\n    );\n  }\n}\n\nexport interface ViteConfigFileOptions {\n  project: string;\n  includeLib?: boolean;\n  includeVitest?: boolean;\n  inSourceTests?: boolean;\n  testEnvironment?: 'node' | 'jsdom' | 'happy-dom' | 'edge-runtime' | string;\n  rollupOptionsExternal?: string[];\n  imports?: string[];\n  plugins?: string[];\n  coverageProvider?: 'v8' | 'istanbul' | 'custom';\n  setupFile?: string;\n  useEsmExtension?: boolean;\n}\n\nexport function createOrEditViteConfig(\n  tree: Tree,\n  options: ViteConfigFileOptions,\n  onlyVitest: boolean,\n  projectAlreadyHasViteTargets?: TargetFlags,\n  vitestFileName?: boolean\n) {\n  const { root: projectRoot } = readProjectConfiguration(tree, options.project);\n\n  const extension = options.useEsmExtension ? 'mts' : 'ts';\n  const viteConfigPath = vitestFileName\n    ? `${projectRoot}/vitest.config.${extension}`\n    : `${projectRoot}/vite.config.${extension}`;\n\n  const isUsingTsPlugin = isUsingTsSolutionSetup(tree);\n  const buildOutDir = isUsingTsPlugin\n    ? './dist'\n    : projectRoot === '.'\n    ? `./dist/${options.project}`\n    : `${offsetFromRoot(projectRoot)}dist/${projectRoot}`;\n\n  const buildOption = onlyVitest\n    ? ''\n    : options.includeLib\n    ? `  // Configuration for building your library.\n  // See: https://vitejs.dev/guide/build.html#library-mode\n  build: {\n    outDir: '${buildOutDir}',\n    emptyOutDir: true,\n    reportCompressedSize: true,\n    commonjsOptions: {\n      transformMixedEsModules: true,\n    },\n    lib: {\n      // Could also be a dictionary or array of multiple entry points.\n      entry: 'src/index.ts',\n      name: '${options.project}',\n      fileName: 'index',\n      // Change this to the formats you want to support.\n      // Don't forget to update your package.json as well.\n      formats: ['es' as const]\n    },\n    rollupOptions: {\n      // External packages that should not be bundled into your library.\n      external: [${options.rollupOptionsExternal ?? ''}]\n    },\n  },`\n    : `  build: {\n    outDir: '${buildOutDir}',\n    emptyOutDir: true,\n    reportCompressedSize: true,\n    commonjsOptions: {\n      transformMixedEsModules: true,\n    },\n  },`;\n\n  const imports: string[] = options.imports ? [...options.imports] : [];\n  const plugins: string[] = options.plugins ? [...options.plugins] : [];\n\n  if (!onlyVitest && options.includeLib) {\n    imports.push(\n      `import dts from 'vite-plugin-dts'`,\n      `import * as path from 'path'`\n    );\n  }\n\n  if (!isUsingTsPlugin) {\n    imports.push(\n      `import { nxViteTsPaths } from '@nx/vite/plugins/nx-tsconfig-paths.plugin'`,\n      `import { nxCopyAssetsPlugin } from '@nx/vite/plugins/nx-copy-assets.plugin'`\n    );\n    plugins.push(`nxViteTsPaths()`, `nxCopyAssetsPlugin(['*.md'])`);\n  }\n\n  if (!onlyVitest && options.includeLib) {\n    plugins.push(\n      `dts({ entryRoot: 'src', tsconfigPath: path.join(__dirname, 'tsconfig.lib.json') })`\n    );\n  }\n\n  const reportsDirectory = isUsingTsPlugin\n    ? './test-output/vitest/coverage'\n    : projectRoot === '.'\n    ? `./coverage/${options.project}`\n    : `${offsetFromRoot(projectRoot)}coverage/${projectRoot}`;\n\n  const testOption = options.includeVitest\n    ? `  test: {\n    watch: false,\n    globals: true,\n    environment: '${options.testEnvironment ?? 'jsdom'}',\n    include: ['{src,tests}/**/*.{test,spec}.{js,mjs,cjs,ts,mts,cts,jsx,tsx}'],\n${options.setupFile ? `    setupFiles: ['${options.setupFile}'],\\n` : ''}\\\n${\n  options.inSourceTests\n    ? `    includeSource: ['src/**/*.{js,mjs,cjs,ts,mts,cts,jsx,tsx}'],\\n`\n    : ''\n}\\\n    reporters: ['default'],\n    coverage: {\n      reportsDirectory: '${reportsDirectory}',\n      provider: ${\n        options.coverageProvider\n          ? `'${options.coverageProvider}' as const`\n          : `'v8' as const`\n      },\n    }\n  },`\n    : '';\n\n  const defineOption = options.inSourceTests\n    ? `  define: {\n    'import.meta.vitest': undefined\n  },`\n    : '';\n\n  const devServerOption = onlyVitest\n    ? ''\n    : options.includeLib\n    ? ''\n    : `  server:{\n    port: 4200,\n    host: 'localhost',\n  },`;\n\n  const previewServerOption = onlyVitest\n    ? ''\n    : options.includeLib\n    ? ''\n    : `  preview:{\n    port: 4300,\n    host: 'localhost',\n  },`;\n\n  const workerOption = `  // Uncomment this if you are using workers.\n  // worker: {\n  //  plugins: [ nxViteTsPaths() ],\n  // },`;\n\n  const cacheDir = `cacheDir: '${normalizedJoinPaths(\n    offsetFromRoot(projectRoot),\n    'node_modules',\n    '.vite',\n    projectRoot === '.' ? options.project : projectRoot\n  )}',`;\n\n  if (tree.exists(viteConfigPath)) {\n    handleViteConfigFileExists(\n      tree,\n      viteConfigPath,\n      options,\n      buildOption,\n      buildOutDir,\n      imports,\n      plugins,\n      testOption,\n      reportsDirectory,\n      cacheDir,\n      projectRoot,\n      offsetFromRoot(projectRoot),\n      projectAlreadyHasViteTargets\n    );\n    return;\n  }\n\n  const viteConfigContent = `/// <reference types='vitest' />\nimport { defineConfig } from 'vite';\n${imports.join(';\\n')}${imports.length ? ';' : ''}\n\nexport default defineConfig(() => ({\n  root: __dirname,\n  ${printOptions(\n    cacheDir,\n    devServerOption,\n    previewServerOption,\n    `  plugins: [${plugins.join(', ')}],`,\n    workerOption,\n    buildOption,\n    defineOption,\n    testOption\n  )}\n}));\n`.replace(/\\s+(?=(\\n|$))/gm, '\\n');\n\n  tree.write(viteConfigPath, viteConfigContent);\n}\n\nfunction printOptions(...options: string[]): string {\n  return options.filter(Boolean).join('\\n');\n}\n\nexport function normalizeViteConfigFilePathWithTree(\n  tree: Tree,\n  projectRoot: string,\n  configFile?: string\n): string {\n  return configFile && tree.exists(configFile)\n    ? configFile\n    : tree.exists(joinPathFragments(`${projectRoot}/vite.config.ts`))\n    ? joinPathFragments(`${projectRoot}/vite.config.ts`)\n    : tree.exists(joinPathFragments(`${projectRoot}/vite.config.js`))\n    ? joinPathFragments(`${projectRoot}/vite.config.js`)\n    : undefined;\n}\n\nexport function getViteConfigPathForProject(\n  tree: Tree,\n  projectName: string,\n  target?: string\n) {\n  let viteConfigPath: string | undefined;\n  const { targets, root } = readProjectConfiguration(tree, projectName);\n  if (target) {\n    viteConfigPath = targets?.[target]?.options?.configFile;\n  } else {\n    const config = Object.values(targets).find(\n      (config) =>\n        config.executor === '@nrwl/nx:build' ||\n        config.executor === '@nrwl/vite:build'\n    );\n    viteConfigPath = config?.options?.configFile;\n  }\n\n  return normalizeViteConfigFilePathWithTree(tree, root, viteConfigPath);\n}\n\nexport async function handleUnsupportedUserProvidedTargets(\n  userProvidedTargetIsUnsupported: TargetFlags,\n  userProvidedTargetName: UserProvidedTargetName,\n  validFoundTargetName: ValidFoundTargetName\n) {\n  if (userProvidedTargetIsUnsupported.build && validFoundTargetName.build) {\n    await handleUnsupportedUserProvidedTargetsErrors(\n      userProvidedTargetName.build,\n      validFoundTargetName.build,\n      'build',\n      'build'\n    );\n  }\n\n  if (userProvidedTargetIsUnsupported.serve && validFoundTargetName.serve) {\n    await handleUnsupportedUserProvidedTargetsErrors(\n      userProvidedTargetName.serve,\n      validFoundTargetName.serve,\n      'serve',\n      'dev-server'\n    );\n  }\n\n  if (userProvidedTargetIsUnsupported.test && validFoundTargetName.test) {\n    await handleUnsupportedUserProvidedTargetsErrors(\n      userProvidedTargetName.test,\n      validFoundTargetName.test,\n      'test',\n      'test'\n    );\n  }\n}\n\nasync function handleUnsupportedUserProvidedTargetsErrors(\n  userProvidedTargetName: string,\n  validFoundTargetName: string,\n  target: Target,\n  executor: 'build' | 'dev-server' | 'test'\n) {\n  logger.warn(\n    `The custom ${target} target you provided (${userProvidedTargetName}) cannot be converted to use the @nx/vite:${executor} executor.\n     However, we found the following ${target} target in your project that can be converted: ${validFoundTargetName}\n\n     Please note that converting a potentially non-compatible project to use Vite.js may result in unexpected behavior. Always commit\n     your changes before converting a project to use Vite.js, and test the converted project thoroughly before deploying it.\n    `\n  );\n  const { Confirm } = require('enquirer');\n  const prompt = new Confirm({\n    name: 'question',\n    message: `Should we convert the ${validFoundTargetName} target to use the @nx/vite:${executor} executor?`,\n    initial: true,\n  });\n  const shouldConvert = await prompt.run();\n  if (!shouldConvert) {\n    throw new Error(\n      `The ${target} target ${userProvidedTargetName} cannot be converted to use the @nx/vite:${executor} executor.\n      Please try again, either by providing a different ${target} target or by not providing a target at all (Nx will\n        convert the first one it finds, most probably this one: ${validFoundTargetName})\n\n      Please note that converting a potentially non-compatible project to use Vite.js may result in unexpected behavior. Always commit\n      your changes before converting a project to use Vite.js, and test the converted project thoroughly before deploying it.\n      `\n    );\n  }\n}\n\nexport async function handleUnknownConfiguration(projectName: string) {\n  if (process.env.NX_INTERACTIVE === 'false') {\n    return;\n  }\n\n  logger.warn(\n    `\n      We could not find any configuration in project ${projectName} that \n      indicates whether we can definitely convert to Vite.\n      \n      If you still want to convert your project to use Vite,\n      please make sure to commit your changes before running this generator.\n      `\n  );\n\n  const { Confirm } = require('enquirer');\n  const prompt = new Confirm({\n    name: 'question',\n    message: `Should Nx convert your project to use Vite?`,\n    initial: true,\n  });\n  const shouldConvert = await prompt.run();\n  if (!shouldConvert) {\n    throw new Error(`\n      Nx could not verify that your project can be converted to use Vite.\n      Please try again with a different project.\n    `);\n  }\n}\n\nfunction handleViteConfigFileExists(\n  tree: Tree,\n  viteConfigPath: string,\n  options: ViteConfigFileOptions,\n  buildOption: string,\n  buildOutDir: string,\n  imports: string[],\n  plugins: string[],\n  testOption: string,\n  reportsDirectory: string,\n  cacheDir: string,\n  projectRoot: string,\n  offsetFromRoot: string,\n  projectAlreadyHasViteTargets?: TargetFlags\n) {\n  if (\n    projectAlreadyHasViteTargets?.build &&\n    projectAlreadyHasViteTargets?.test\n  ) {\n    return;\n  }\n\n  if (process.env.NX_VERBOSE_LOGGING === 'true') {\n    logger.info(\n      `vite.config.ts already exists for project ${options.project}.`\n    );\n  }\n\n  const buildOptionObject = options.includeLib\n    ? {\n        lib: {\n          entry: 'src/index.ts',\n          name: options.project,\n          fileName: 'index',\n          formats: ['es'],\n        },\n        rollupOptions: {\n          external: options.rollupOptionsExternal ?? [],\n        },\n        outDir: buildOutDir,\n        reportCompressedSize: true,\n        commonjsOptions: {\n          transformMixedEsModules: true,\n        },\n      }\n    : {\n        outDir: buildOutDir,\n        reportCompressedSize: true,\n        commonjsOptions: {\n          transformMixedEsModules: true,\n        },\n      };\n\n  const testOptionObject = {\n    globals: true,\n    environment: options.testEnvironment ?? 'jsdom',\n    include: ['src/**/*.{test,spec}.{js,mjs,cjs,ts,mts,cts,jsx,tsx}'],\n    reporters: ['default'],\n    coverage: {\n      reportsDirectory: reportsDirectory,\n      provider: `'${options.coverageProvider ?? 'v8'}'`,\n    },\n  };\n\n  const changed = ensureViteConfigIsCorrect(\n    tree,\n    viteConfigPath,\n    buildOption,\n    buildOptionObject,\n    imports,\n    plugins,\n    testOption,\n    testOptionObject,\n    cacheDir,\n    projectAlreadyHasViteTargets ?? {}\n  );\n\n  if (!changed) {\n    logger.warn(\n      `Make sure the following setting exists in your Vite configuration file (${viteConfigPath}):\n        \n        ${buildOption}\n        \n        `\n    );\n  }\n}\n\nfunction normalizedJoinPaths(...paths: string[]): string {\n  const path = joinPathFragments(...paths);\n\n  return path.startsWith('.') ? path : `./${path}`;\n}\n"],"names":["addBuildTarget","addOrChangeTestTarget","addPreviewTarget","addServeTarget","createOrEditViteConfig","deleteWebpackConfig","editTsConfig","findExistingJsBuildTargetInProject","getViteConfigPathForProject","handleUnknownConfiguration","handleUnsupportedUserProvidedTargets","moveAndEditIndexHtml","normalizeViteConfigFilePathWithTree","targets","output","supportedExecutors","build","unsupportedExecutors","target","executorName","executor","includes","supported","unsupported","tree","options","hasPlugin","nxJson","project","readNxJson","plugins","some","p","plugin","readProjectConfiguration","testTarget","reportsDirectory","joinPathFragments","offsetFromRoot","root","testOptions","Error","outputs","updateProjectConfiguration","addBuildTargetDefaults","isTsSolutionSetup","isUsingTsSolutionSetup","buildOptions","outputPath","defaultConfiguration","configurations","development","mode","production","buildTarget","hmr","serveTarget","previewOptions","proxyConfig","https","open","preview","dependsOn","projectConfig","tsconfigPath","find","exists","config","readJson","uiFramework","compilerOptions","jsx","allowJs","esModuleInterop","allowSyntheticDefaultImports","strict","module","forceConsistentCasingInFileNames","noImplicitOverride","noPropertyAccessFromIndexSignature","noImplicitReturns","noFallthroughCasesInSwitch","writeJson","projectRoot","webpackConfigFilePath","webpackConfigPath","delete","indexHtmlPath","mainPath","replace","indexHtmlContent","read","write","onlyVitest","projectAlreadyHasViteTargets","vitestFileName","extension","useEsmExtension","viteConfigPath","isUsingTsPlugin","buildOutDir","buildOption","includeLib","rollupOptionsExternal","imports","push","testOption","includeVitest","testEnvironment","setupFile","inSourceTests","coverageProvider","defineOption","devServerOption","previewServerOption","workerOption","cacheDir","normalizedJoinPaths","handleViteConfigFileExists","viteConfigContent","join","length","printOptions","filter","Boolean","configFile","undefined","projectName","Object","values","userProvidedTargetIsUnsupported","userProvidedTargetName","validFoundTargetName","handleUnsupportedUserProvidedTargetsErrors","serve","test","logger","warn","Confirm","require","prompt","name","message","initial","shouldConvert","run","process","env","NX_INTERACTIVE","NX_VERBOSE_LOGGING","info","buildOptionObject","lib","entry","fileName","formats","rollupOptions","external","outDir","reportCompressedSize","commonjsOptions","transformMixedEsModules","testOptionObject","globals","environment","include","reporters","coverage","provider","changed","ensureViteConfigIsCorrect","paths","path","startsWith"],"rangeMappingsmappings":"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"}