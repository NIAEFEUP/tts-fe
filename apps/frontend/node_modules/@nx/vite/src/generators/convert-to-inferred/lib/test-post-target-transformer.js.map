{"version":3,"sources":["../../../../../../../packages/vite/src/generators/convert-to-inferred/lib/test-post-target-transformer.ts"],"sourcesContent":["import { type TargetConfiguration, type Tree } from '@nx/devkit';\nimport { toProjectRelativePath } from './utils';\nimport { processTargetOutputs } from '@nx/devkit/src/generators/plugin-migrations/plugin-migration-utils';\n\nexport function testPostTargetTransformer(\n  target: TargetConfiguration,\n  tree: Tree,\n  projectDetails: { projectName: string; root: string },\n  inferredTargetConfiguration: TargetConfiguration\n) {\n  if (target.options) {\n    removePropertiesFromTargetOptions(target.options, projectDetails.root);\n  }\n\n  if (target.configurations) {\n    for (const configurationName in target.configurations) {\n      const configuration = target.configurations[configurationName];\n      removePropertiesFromTargetOptions(configuration, projectDetails.root);\n    }\n\n    if (Object.keys(target.configurations).length === 0) {\n      if ('defaultConfiguration' in target) {\n        delete target.defaultConfiguration;\n      }\n      delete target.configurations;\n    }\n\n    if (\n      'defaultConfiguration' in target &&\n      !target.configurations[target.defaultConfiguration]\n    ) {\n      delete target.defaultConfiguration;\n    }\n  }\n\n  if (target.outputs) {\n    processTargetOutputs(\n      target,\n      [{ newName: 'coverage.reportsDirectory', oldName: 'reportsDirectory' }],\n      inferredTargetConfiguration,\n      {\n        projectName: projectDetails.projectName,\n        projectRoot: projectDetails.root,\n      }\n    );\n  }\n\n  if (\n    target.inputs &&\n    target.inputs.every((i) => i === 'default' || i === '^production')\n  ) {\n    delete target.inputs;\n  }\n\n  return target;\n}\n\nfunction removePropertiesFromTargetOptions(\n  targetOptions: any,\n  projectRoot: string\n) {\n  if ('configFile' in targetOptions) {\n    targetOptions.config = toProjectRelativePath(\n      targetOptions.configFile,\n      projectRoot\n    );\n    delete targetOptions.configFile;\n  }\n\n  if ('reportsDirectory' in targetOptions) {\n    if (targetOptions.reportsDirectory.startsWith('../')) {\n      targetOptions.reportsDirectory = targetOptions.reportsDirectory.replace(\n        /(\\.\\.\\/)+/,\n        ''\n      );\n    }\n    targetOptions['coverage.reportsDirectory'] = toProjectRelativePath(\n      targetOptions.reportsDirectory,\n      projectRoot\n    );\n    delete targetOptions.reportsDirectory;\n  }\n\n  if ('testFiles' in targetOptions) {\n    targetOptions.testNamePattern = `\"/(${targetOptions.testFiles\n      .map((f) => f.replace('.', '\\\\.'))\n      .join('|')})/\"`;\n    delete targetOptions.testFiles;\n  }\n}\n"],"names":["testPostTargetTransformer","target","tree","projectDetails","inferredTargetConfiguration","options","removePropertiesFromTargetOptions","root","configurations","configurationName","configuration","Object","keys","length","defaultConfiguration","outputs","processTargetOutputs","newName","oldName","projectName","projectRoot","inputs","every","i","targetOptions","config","toProjectRelativePath","configFile","reportsDirectory","startsWith","replace","testNamePattern","testFiles","map","f","join"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";+BAIgBA;;;eAAAA;;;uBAHsB;sCACD;AAE9B,SAASA,0BACdC,MAA2B,EAC3BC,IAAU,EACVC,cAAqD,EACrDC,2BAAgD;IAEhD,IAAIH,OAAOI,OAAO,EAAE;QAClBC,kCAAkCL,OAAOI,OAAO,EAAEF,eAAeI,IAAI;IACvE;IAEA,IAAIN,OAAOO,cAAc,EAAE;QACzB,IAAK,MAAMC,qBAAqBR,OAAOO,cAAc,CAAE;YACrD,MAAME,gBAAgBT,OAAOO,cAAc,CAACC,kBAAkB;YAC9DH,kCAAkCI,eAAeP,eAAeI,IAAI;QACtE;QAEA,IAAII,OAAOC,IAAI,CAACX,OAAOO,cAAc,EAAEK,MAAM,KAAK,GAAG;YACnD,IAAI,0BAA0BZ,QAAQ;gBACpC,OAAOA,OAAOa,oBAAoB;YACpC;YACA,OAAOb,OAAOO,cAAc;QAC9B;QAEA,IACE,0BAA0BP,UAC1B,CAACA,OAAOO,cAAc,CAACP,OAAOa,oBAAoB,CAAC,EACnD;YACA,OAAOb,OAAOa,oBAAoB;QACpC;IACF;IAEA,IAAIb,OAAOc,OAAO,EAAE;QAClBC,IAAAA,0CAAoB,EAClBf,QACA;YAAC;gBAAEgB,SAAS;gBAA6BC,SAAS;YAAmB;SAAE,EACvEd,6BACA;YACEe,aAAahB,eAAegB,WAAW;YACvCC,aAAajB,eAAeI,IAAI;QAClC;IAEJ;IAEA,IACEN,OAAOoB,MAAM,IACbpB,OAAOoB,MAAM,CAACC,KAAK,CAAC,CAACC,IAAMA,MAAM,aAAaA,MAAM,gBACpD;QACA,OAAOtB,OAAOoB,MAAM;IACtB;IAEA,OAAOpB;AACT;AAEA,SAASK,kCACPkB,aAAkB,EAClBJ,WAAmB;IAEnB,IAAI,gBAAgBI,eAAe;QACjCA,cAAcC,MAAM,GAAGC,IAAAA,4BAAqB,EAC1CF,cAAcG,UAAU,EACxBP;QAEF,OAAOI,cAAcG,UAAU;IACjC;IAEA,IAAI,sBAAsBH,eAAe;QACvC,IAAIA,cAAcI,gBAAgB,CAACC,UAAU,CAAC,QAAQ;YACpDL,cAAcI,gBAAgB,GAAGJ,cAAcI,gBAAgB,CAACE,OAAO,CACrE,aACA;QAEJ;QACAN,aAAa,CAAC,4BAA4B,GAAGE,IAAAA,4BAAqB,EAChEF,cAAcI,gBAAgB,EAC9BR;QAEF,OAAOI,cAAcI,gBAAgB;IACvC;IAEA,IAAI,eAAeJ,eAAe;QAChCA,cAAcO,eAAe,GAAG,CAAC,GAAG,EAAEP,cAAcQ,SAAS,CAC1DC,GAAG,CAAC,CAACC,IAAMA,EAAEJ,OAAO,CAAC,KAAK,QAC1BK,IAAI,CAAC,KAAK,GAAG,CAAC;QACjB,OAAOX,cAAcQ,SAAS;IAChC;AACF"}