{"version":3,"sources":["../../../../../../packages/vite/src/executors/test/vitest.impl.ts"],"sourcesContent":["import { ExecutorContext, workspaceRoot } from '@nx/devkit';\nimport { VitestExecutorOptions } from './schema';\nimport { resolve } from 'path';\nimport { registerTsConfigPaths } from '@nx/js/src/internal';\nimport { NxReporter } from './lib/nx-reporter';\nimport { getOptions } from './lib/utils';\nimport { loadVitestDynamicImport } from '../../utils/executor-utils';\n\nexport async function* vitestExecutor(\n  options: VitestExecutorOptions,\n  context: ExecutorContext\n) {\n  const projectRoot =\n    context.projectsConfigurations.projects[context.projectName].root;\n\n  registerTsConfigPaths(resolve(workspaceRoot, projectRoot, 'tsconfig.json'));\n\n  process.env.VITE_CJS_IGNORE_WARNING = 'true';\n  // Allows ESM to be required in CJS modules. Vite will be published as ESM in the future.\n  const { startVitest } = await loadVitestDynamicImport();\n\n  const resolvedOptions =\n    (await getOptions(options, context, projectRoot)) ?? {};\n\n  const watch = resolvedOptions['watch'] === true;\n\n  const nxReporter = new NxReporter(watch);\n  if (resolvedOptions['reporters'] === undefined) {\n    resolvedOptions['reporters'] = [];\n  } else if (typeof resolvedOptions['reporters'] === 'string') {\n    resolvedOptions['reporters'] = [resolvedOptions['reporters']];\n  }\n  resolvedOptions['reporters'].push(nxReporter);\n\n  const cliFilters = options.testFiles ?? [];\n\n  const ctx = await startVitest(\n    resolvedOptions['mode'] ?? 'test',\n    cliFilters,\n    resolvedOptions\n  );\n\n  let hasErrors = false;\n\n  const processExit = () => {\n    ctx.exit();\n    if (hasErrors) {\n      process.exit(1);\n    } else {\n      process.exit(0);\n    }\n  };\n\n  if (watch) {\n    process.on('SIGINT', processExit);\n    process.on('SIGTERM', processExit);\n    process.on('exit', processExit);\n  }\n\n  // vitest sets the exitCode in case of exception without notifying reporters\n  if (\n    process.exitCode === undefined ||\n    (watch && ctx.state.getFiles().length > 0)\n  ) {\n    for await (const report of nxReporter) {\n      // vitest sets the exitCode = 1 when code coverage isn't met\n      hasErrors =\n        report.hasErrors || (process.exitCode && process.exitCode !== 0);\n    }\n  } else {\n    hasErrors = process.exitCode !== 0;\n  }\n\n  return {\n    success: !hasErrors,\n  };\n}\n\nexport default vitestExecutor;\n"],"names":["vitestExecutor","options","context","projectRoot","projectsConfigurations","projects","projectName","root","registerTsConfigPaths","resolve","workspaceRoot","process","env","VITE_CJS_IGNORE_WARNING","startVitest","loadVitestDynamicImport","resolvedOptions","getOptions","watch","nxReporter","NxReporter","undefined","push","cliFilters","testFiles","ctx","hasErrors","processExit","exit","on","exitCode","state","getFiles","length","report","success"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";;;;;;;;IA8EA,OAA8B;eAA9B;;IAtEuBA,cAAc;eAAdA;;;wBARwB;sBAEvB;0BACc;4BACX;uBACA;+BACa;AAEjC,gBAAgBA,eACrBC,OAA8B,EAC9BC,OAAwB;IAExB,MAAMC,cACJD,QAAQE,sBAAsB,CAACC,QAAQ,CAACH,QAAQI,WAAW,CAAC,CAACC,IAAI;IAEnEC,IAAAA,+BAAqB,EAACC,IAAAA,aAAO,EAACC,qBAAa,EAAEP,aAAa;IAE1DQ,QAAQC,GAAG,CAACC,uBAAuB,GAAG;IACtC,yFAAyF;IACzF,MAAM,EAAEC,WAAW,EAAE,GAAG,MAAMC,IAAAA,sCAAuB;QAGlD;IADH,MAAMC,kBACJ,CAAC,OAAA,MAAMC,IAAAA,iBAAU,EAAChB,SAASC,SAASC,wBAAnC,OAAoD,CAAC;IAExD,MAAMe,QAAQF,eAAe,CAAC,QAAQ,KAAK;IAE3C,MAAMG,aAAa,IAAIC,sBAAU,CAACF;IAClC,IAAIF,eAAe,CAAC,YAAY,KAAKK,WAAW;QAC9CL,eAAe,CAAC,YAAY,GAAG,EAAE;IACnC,OAAO,IAAI,OAAOA,eAAe,CAAC,YAAY,KAAK,UAAU;QAC3DA,eAAe,CAAC,YAAY,GAAG;YAACA,eAAe,CAAC,YAAY;SAAC;IAC/D;IACAA,eAAe,CAAC,YAAY,CAACM,IAAI,CAACH;QAEflB;IAAnB,MAAMsB,aAAatB,CAAAA,qBAAAA,QAAQuB,SAAS,YAAjBvB,qBAAqB,EAAE;QAGxCe;IADF,MAAMS,MAAM,MAAMX,YAChBE,CAAAA,wBAAAA,eAAe,CAAC,OAAO,YAAvBA,wBAA2B,QAC3BO,YACAP;IAGF,IAAIU,YAAY;IAEhB,MAAMC,cAAc;QAClBF,IAAIG,IAAI;QACR,IAAIF,WAAW;YACbf,QAAQiB,IAAI,CAAC;QACf,OAAO;YACLjB,QAAQiB,IAAI,CAAC;QACf;IACF;IAEA,IAAIV,OAAO;QACTP,QAAQkB,EAAE,CAAC,UAAUF;QACrBhB,QAAQkB,EAAE,CAAC,WAAWF;QACtBhB,QAAQkB,EAAE,CAAC,QAAQF;IACrB;IAEA,4EAA4E;IAC5E,IACEhB,QAAQmB,QAAQ,KAAKT,aACpBH,SAASO,IAAIM,KAAK,CAACC,QAAQ,GAAGC,MAAM,GAAG,GACxC;QACA,WAAW,MAAMC,UAAUf,WAAY;YACrC,4DAA4D;YAC5DO,YACEQ,OAAOR,SAAS,IAAKf,QAAQmB,QAAQ,IAAInB,QAAQmB,QAAQ,KAAK;QAClE;IACF,OAAO;QACLJ,YAAYf,QAAQmB,QAAQ,KAAK;IACnC;IAEA,OAAO;QACLK,SAAS,CAACT;IACZ;AACF;MAEA,WAAe1B"}