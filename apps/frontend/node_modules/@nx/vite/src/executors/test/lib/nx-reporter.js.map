{"version":3,"sources":["../../../../../../../packages/vite/src/executors/test/lib/nx-reporter.ts"],"sourcesContent":["import type { File, Reporter } from 'vitest';\n\nexport class NxReporter implements Reporter {\n  deferred: {\n    promise: Promise<boolean>;\n    resolve: (val: boolean) => void;\n  };\n\n  constructor(private watch: boolean) {\n    this.setupDeferred();\n  }\n\n  async *[Symbol.asyncIterator]() {\n    do {\n      const hasErrors = await this.deferred.promise;\n      yield { hasErrors };\n      this.setupDeferred();\n    } while (this.watch);\n  }\n\n  private setupDeferred() {\n    let resolve: (val: boolean) => void;\n    this.deferred = {\n      promise: new Promise((res) => {\n        resolve = res;\n      }),\n      resolve,\n    };\n  }\n\n  onFinished(files: File[], errors?: unknown[]) {\n    const hasErrors =\n      files.some((f) => f.result?.state === 'fail') || errors?.length > 0;\n    this.deferred.resolve(hasErrors);\n  }\n}\n"],"names":["NxReporter","Symbol","asyncIterator","hasErrors","deferred","promise","setupDeferred","watch","resolve","Promise","res","onFinished","files","errors","some","f","result","state","length","constructor"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";+BAEaA;;;eAAAA;;;AAAN,IAAA,AAAMA,aAAN,MAAMA;IAUX,OAAO,CAACC,OAAOC,aAAa,CAAC,GAAG;QAC9B,GAAG;YACD,MAAMC,YAAY,MAAM,IAAI,CAACC,QAAQ,CAACC,OAAO;YAC7C,MAAM;gBAAEF;YAAU;YAClB,IAAI,CAACG,aAAa;QACpB,QAAS,IAAI,CAACC,KAAK,CAAE;IACvB;IAEQD,gBAAgB;QACtB,IAAIE;QACJ,IAAI,CAACJ,QAAQ,GAAG;YACdC,SAAS,IAAII,QAAQ,CAACC;gBACpBF,UAAUE;YACZ;YACAF;QACF;IACF;IAEAG,WAAWC,KAAa,EAAEC,MAAkB,EAAE;QAC5C,MAAMV,YACJS,MAAME,IAAI,CAAC,CAACC;gBAAMA;mBAAAA,EAAAA,YAAAA,EAAEC,MAAM,qBAARD,UAAUE,KAAK,MAAK;cAAWJ,CAAAA,0BAAAA,OAAQK,MAAM,IAAG;QACpE,IAAI,CAACd,QAAQ,CAACI,OAAO,CAACL;IACxB;IA1BAgB,YAAY,AAAQZ,KAAc,CAAE;aAAhBA,QAAAA;QAClB,IAAI,CAACD,aAAa;IACpB;AAyBF"}