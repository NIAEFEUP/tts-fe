{"version":3,"sources":["../../../../packages/vite/plugins/nx-vite-build-coordination.plugin.ts"],"sourcesContent":["import { type Plugin } from 'vite';\nimport { BatchFunctionRunner } from 'nx/src/command-line/watch/watch';\nimport { exec, type ChildProcess } from 'child_process';\nimport {\n  daemonClient,\n  type UnregisterCallback,\n} from 'nx/src/daemon/client/client';\nimport { output } from 'nx/src/utils/output';\n\nexport interface NxViteBuildCoordinationPluginOptions {\n  buildCommand: string;\n}\nexport function nxViteBuildCoordinationPlugin(\n  options: NxViteBuildCoordinationPluginOptions\n): Plugin {\n  let activeBuildProcess: ChildProcess | undefined;\n  let unregisterFileWatcher: UnregisterCallback | undefined;\n\n  async function buildChangedProjects() {\n    await new Promise<void>((res) => {\n      activeBuildProcess = exec(options.buildCommand, {\n        windowsHide: false,\n      });\n      activeBuildProcess.stdout.pipe(process.stdout);\n      activeBuildProcess.stderr.pipe(process.stderr);\n      activeBuildProcess.on('exit', () => {\n        res();\n      });\n      activeBuildProcess.on('error', () => {\n        res();\n      });\n    });\n    activeBuildProcess = undefined;\n  }\n\n  function createFileWatcher() {\n    const runner = new BatchFunctionRunner(() => buildChangedProjects());\n    return daemonClient.registerFileWatcher(\n      { watchProjects: 'all' },\n      (err, { changedProjects, changedFiles }) => {\n        if (err === 'closed') {\n          output.error({\n            title: 'Watch connection closed',\n            bodyLines: [\n              'The daemon had closed the connection to this watch process.',\n              'Please restart your watch command.',\n            ],\n          });\n          process.exit(1);\n        }\n\n        if (activeBuildProcess) {\n          activeBuildProcess.kill(2);\n          activeBuildProcess = undefined;\n        }\n\n        runner.enqueue(changedProjects, changedFiles);\n      }\n    );\n  }\n\n  let firstBuildStart = true;\n\n  return {\n    name: 'nx-vite-build-coordination-plugin',\n    async buildStart() {\n      if (firstBuildStart) {\n        firstBuildStart = false;\n        await buildChangedProjects();\n        if (daemonClient.enabled()) {\n          unregisterFileWatcher = await createFileWatcher();\n          process.on('exit', () => unregisterFileWatcher());\n          process.on('SIGINT', () => process.exit());\n        } else {\n          output.warn({\n            title:\n              'Nx Daemon is not enabled. Projects will not be rebuilt when files change.',\n          });\n        }\n      }\n    },\n  };\n}\n"],"names":["nxViteBuildCoordinationPlugin","options","activeBuildProcess","unregisterFileWatcher","buildChangedProjects","Promise","res","exec","buildCommand","windowsHide","stdout","pipe","process","stderr","on","undefined","createFileWatcher","runner","BatchFunctionRunner","daemonClient","registerFileWatcher","watchProjects","err","changedProjects","changedFiles","output","error","title","bodyLines","exit","kill","enqueue","firstBuildStart","name","buildStart","enabled","warn"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":";+BAYgBA;;;eAAAA;;;uBAXoB;+BACI;wBAIjC;wBACgB;AAKhB,SAASA,8BACdC,OAA6C;IAE7C,IAAIC;IACJ,IAAIC;IAEJ,eAAeC;QACb,MAAM,IAAIC,QAAc,CAACC;YACvBJ,qBAAqBK,IAAAA,mBAAI,EAACN,QAAQO,YAAY,EAAE;gBAC9CC,aAAa;YACf;YACAP,mBAAmBQ,MAAM,CAACC,IAAI,CAACC,QAAQF,MAAM;YAC7CR,mBAAmBW,MAAM,CAACF,IAAI,CAACC,QAAQC,MAAM;YAC7CX,mBAAmBY,EAAE,CAAC,QAAQ;gBAC5BR;YACF;YACAJ,mBAAmBY,EAAE,CAAC,SAAS;gBAC7BR;YACF;QACF;QACAJ,qBAAqBa;IACvB;IAEA,SAASC;QACP,MAAMC,SAAS,IAAIC,0BAAmB,CAAC,IAAMd;QAC7C,OAAOe,oBAAY,CAACC,mBAAmB,CACrC;YAAEC,eAAe;QAAM,GACvB,CAACC,KAAK,EAAEC,eAAe,EAAEC,YAAY,EAAE;YACrC,IAAIF,QAAQ,UAAU;gBACpBG,cAAM,CAACC,KAAK,CAAC;oBACXC,OAAO;oBACPC,WAAW;wBACT;wBACA;qBACD;gBACH;gBACAhB,QAAQiB,IAAI,CAAC;YACf;YAEA,IAAI3B,oBAAoB;gBACtBA,mBAAmB4B,IAAI,CAAC;gBACxB5B,qBAAqBa;YACvB;YAEAE,OAAOc,OAAO,CAACR,iBAAiBC;QAClC;IAEJ;IAEA,IAAIQ,kBAAkB;IAEtB,OAAO;QACLC,MAAM;QACN,MAAMC;YACJ,IAAIF,iBAAiB;gBACnBA,kBAAkB;gBAClB,MAAM5B;gBACN,IAAIe,oBAAY,CAACgB,OAAO,IAAI;oBAC1BhC,wBAAwB,MAAMa;oBAC9BJ,QAAQE,EAAE,CAAC,QAAQ,IAAMX;oBACzBS,QAAQE,EAAE,CAAC,UAAU,IAAMF,QAAQiB,IAAI;gBACzC,OAAO;oBACLJ,cAAM,CAACW,IAAI,CAAC;wBACVT,OACE;oBACJ;gBACF;YACF;QACF;IACF;AACF"}